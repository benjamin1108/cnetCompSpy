---
description: 
globs: 
alwaysApply: true
---
# 配置文件指南

项目使用YAML格式的配置文件管理各种设置。配置文件按优先级覆盖，从低到高：

1. 内置默认配置（[main.py](mdc:src/main.py)中的`DEFAULT_CONFIG`）
2. [config.yaml](mdc:config.yaml) - 主配置文件
3. [config.secret.yaml](mdc:config.secret.yaml) - 包含敏感信息的配置文件（如API密钥）
4. 命令行参数

## 配置文件结构

配置文件主要包含以下部分：

### 爬虫配置

```yaml
crawlers:
  # 全局爬虫设置
  user_agent: "Mozilla/5.0 ..."
  timeout: 10
  retry: 3
  auto_driver: true
  
  # 厂商特定配置
  vendors:
    aws:
      enabled: true
      base_url: "https://aws.amazon.com"
      blog_url: "https://aws.amazon.com/blogs/"
    azure:
      enabled: false
      # ...其他Azure配置
    google_cloud:
      enabled: false
      # ...其他GCP配置
```

### AI服务配置

```yaml
ai_service:
  model: "openai/gpt-3.5-turbo"  # 使用的模型
  temperature: 0.7               # 生成温度
  max_tokens: 2048               # 最大生成长度
  # API密钥应放在config.secret.yaml中
```

## 敏感配置

敏感配置（如API密钥）应存储在`config.secret.yaml`中，该文件不应提交到版本控制系统。可使用提供的模板创建：

```bash
cp config.secret.yaml.template config.secret.yaml
# 然后编辑config.secret.yaml添加实际密钥
```

## 配置处理逻辑

配置文件处理逻辑在[main.py](mdc:src/main.py)中实现，主要包括：

- `get_config()` - 加载并合并配置
- `merge_configs()` - 递归合并配置字典
- `load_yaml_file()` - 加载YAML文件
