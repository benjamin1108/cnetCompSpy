---
description: 
globs: 
alwaysApply: true
---
# 云计算竞争情报爬虫系统 (cnetCompSpy) 项目结构

## 核心文件

- [main.py](mdc:src/main.py) - 项目主入口点，包含命令行参数解析和主要的运行模式
- [config.yaml](mdc:config.yaml) - 主配置文件
- [config.secret.yaml](mdc:config.secret.yaml) - 敏感配置文件（包含API密钥等）

## 项目组件

### 1. 爬虫模块

爬虫模块负责从各大云服务提供商的网站爬取最新的产品信息、博客文章和新闻：

- [crawlers/common/crawler_manager.py](mdc:src/crawlers/common/crawler_manager.py) - 爬虫管理器
- [crawlers/vendors/](mdc:src/crawlers/vendors) - 包含各个厂商（如AWS、Azure、GCP）的爬虫实现

### 2. AI分析模块

AI分析模块负责使用大语言模型分析爬取的数据：

- [ai_analyzer/analyzer.py](mdc:src/ai_analyzer/analyzer.py) - AI分析主类，处理文本分析和生成见解
- [ai_analyzer/thread_pool.py](mdc:src/ai_analyzer/thread_pool.py) - 线程池实现，用于并行处理分析任务

### 3. 工具类

- [utils/colored_logger.py](mdc:src/utils/colored_logger.py) - 彩色日志工具
- [utils/driver_manager.py](mdc:src/utils/driver_manager.py) - Selenium驱动管理器
- [utils/process_lock_manager.py](mdc:src/utils/process_lock_manager.py) - 进程锁管理器，防止多个实例同时运行
- [utils/metadata_manager.py](mdc:src/utils/metadata_manager.py) - 元数据管理器，管理爬取记录
- [utils/stats_analyzer.py](mdc:src/utils/stats_analyzer.py) - 统计分析工具

## 使用方法

项目支持三种运行模式：
1. `crawl` - 爬取数据
2. `analyze` - 分析已爬取的数据
3. `test` - 测试模式

使用示例：
```bash
# 爬取AWS的博客内容
python -m src.main --mode crawl --vendor aws --source blog

# 分析所有爬取的数据
python -m src.main --mode analyze

# 清理所有中间文件
python -m src.main --clean
```

## 数据流

1. 爬虫模块从云服务提供商网站爬取数据，存储在 `data/raw/` 目录
2. AI分析模块处理原始数据，生成分析结果存储在 `data/analysis/` 目录
3. 统计和报告功能汇总分析结果，提供竞争情报见解
