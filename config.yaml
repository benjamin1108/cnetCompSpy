# 爬虫配置
crawler:
  timeout: 30            # 请求超时时间（秒）
  retry: 3               # 重试次数
  interval: 2            # 请求间隔时间（秒）
  article_limit: 50      # 每个来源最多爬取的文章数量
  max_workers: 4         # 并发爬虫数量
  headers:
    User-Agent: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"

# 数据源配置
sources:
  aws:
    blog: 
      url: "https://aws.amazon.com/blogs/networking-and-content-delivery/"
      type: "blog"
      test_mode: false    # 测试模式开关，true时只爬取1篇文章
    docs:
      url: "https://docs.aws.amazon.com/"
      type: "documentation"
  azure:
    blog:
      url: "https://azure.microsoft.com/en-us/blog/category/networking/"
      type: "blog"
      test_mode: false
    docs:
      url: "https://learn.microsoft.com/en-us/azure/"
      type: "documentation"
  gcp:
    blog:
      url: "https://cloud.google.com/blog/products/networking"
      type: "blog"
      test_mode: false
    docs:
      url: "https://cloud.google.com/docs/"
      type: "documentation"
  tencent:
    blog:
      url: "https://www.tencentcloud.com/document/product"
      type: "blog"
      test_mode: false
    docs:
      url: "https://www.tencentcloud.com/document/product"
      type: "documentation"
  huawei:
    blog:
      url: "https://www.huaweicloud.com/intl/en-us/news/"
      type: "blog"
      test_mode: false
    docs:
      url: "https://support.huaweicloud.com/intl/en-us/index.html"
      type: "documentation"
  volcano:
    blog:
      url: "https://volcano.sh/en/blog/"
      type: "blog"
      test_mode: false
    docs:
      url: "https://volcano.sh/en/docs/"
      type: "documentation"

# AI分析基础配置
ai_analyzer:
  model: "qwen-max"           # 使用的AI模型名称
  max_tokens: 8192                   # 最大令牌数
  temperature: 1                   # 温度参数
    # API基础URL（请选择您使用的模型服务提供商的API端点）
  # 示例:
  # - 阿里云通义千问: "https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions"
  # - OpenAI: "https://api.openai.com/v1"
  # - Azure OpenAI: "https://your-resource-name.openai.azure.com/openai/deployments/your-deployment-name"
  # - 百度文心一言: "https://aip.baidubce.com/rpc/2.0/ai_custom/v1/wenxinworkshop"
  # - 讯飞星火: "https://spark-api.xf-yun.com/v1"
  api_base: "https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions" 
  system_prompt: "你是一个专业的云计算技术分析师，擅长分析和解读各类云计算技术文档。请以简洁有力、专业清晰的风格回答问题。并且输出如下notion风格的markdown文档 标题：使用#来表示标题，#的数量表示标题的级别（例如，#表示H1，##表示H2等）。粗体和斜体：支持粗体（**text**）和斜体（*text*）。列表：支持有序列表（1. ）和无序列表（- ）。代码块：可以使用三个反引号（```）来高亮代码块，或使用单个反引号（`）来内联代码。链接：使用[text](url)来创建链接。图片：使用![alt text](url)来嵌入图片。表格：使用| 语法来创建表格。复选框：支持复选框，未选中为- [ ]，选中为- [x]。分隔线：使用---来添加水平线。引用：使用> 来表示块引用。高亮框：Notion有独特的功能来创建高亮框，用于重要信息，使用> [!NOTE]、> [!TIP]等。表情符号：允许在文本中使用表情符号。提及：可以使用@来提及其他页面或人员。数据库：支持内联数据库，虽然可以在Markdown中表示，但可能无法完全捕捉其交互性。折叠列表：Notion有折叠列表，可以隐藏或显示内容，这在标准Markdown中没有直接支持。页面属性：Notion页面可以有属性，如标签、日期等，这在Markdown中不是标准的。同步块：Notion允许在页面间同步块，这在Markdown中没有。评论：Notion支持内联评论，这不是标准Markdown的一部分。版本历史：Notion保留版本历史，而Markdown文件本身不具备此功能。协作：Notion设计用于实时协作，而Markdown通常用于静态文档。"
  tasks:
    - type: "AI摘要"
      prompt: "请对本文进行摘要竞争分析摘要，要点清晰。使用notion风格的markdown输出结果,不要有过多的空行，"
    - type: "全文翻译"
      prompt: "请将此内容翻译成中文，保持专业术语的准确性，并确保翻译后的内容流畅自然。使用标准的markdown格式，结构清晰，专业美观"
    # - type: "对比分析"
    #   prompt: "请分析此服务与其他云服务商类似服务的区别和竞争优势。重点关注技术创新点、性能指标、成本效益和适用场景等方面。分析要有理有据，言之有物。" 